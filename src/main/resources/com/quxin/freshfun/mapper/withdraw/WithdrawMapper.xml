<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.quxin.freshfun.dao.WithdrawMapper">

    <!--分页查询提现记录-->
    <select id="selectWithdrawListByAppId" resultType="com.quxin.freshfun.model.withdraw.WithdrawPOJO">
         select id as withdrawId , app_id as appId , user_id as userId , account_type as accountType ,
             account_num as accountNum , withdraw_money as withdrawMoney , state , handler_id as handlerId ,
             remark , created , updated ,is_deleted as isDeleted
         from withdraw_base
         where app_id = #{appId} and is_deleted = 0 order by created desc
         limit #{start} , #{pageSize}
    </select>

    <!--查询正在提现中的总金额-->
    <select id="selectSumWithdrawingByAppId" parameterType="java.lang.Long" resultType="java.lang.Integer">
        select sum(withdraw_money) from withdraw_base
        where app_id = #{appId} and is_deleted = 0 and state = 0
    </select>

    <!--插入提现记录-->
    <insert id="insertWithdraw" parameterType="com.quxin.freshfun.model.withdraw.WithdrawPOJO" useGeneratedKeys="true" keyProperty="withdrawId">
        insert into withdraw_base(app_id , user_id , account_type , account_num , withdraw_money , state , created , updated , is_deleted)
        values(#{appId} , #{userId} , #{accountType} ,#{accountNum} ,#{withdrawMoney} ,#{state} ,#{created},#{updated},#{isDeleted})
    </insert>

    <!--根据appId查询提现记录数-->
    <select id="selectCountWithdrawByAppId" parameterType="Long" resultType="Integer" >
        select count(id) from withdraw_base
        where app_id = #{appId} and is_deleted = 0
    </select>

    <!--根据appId查询累计入账金额从订单-->
    <select id="selectTotalMoneyByAppId" parameterType="Long" resultType="Integer">
        select sum(actual_price) from order_details
        where is_deleted = 0 and (app_id = #{appId} or (fans_app_id=#{appId} and app_id = 888888)) and order_status <![CDATA[>=]]> 30 and order_status <![CDATA[<=]]> 100
    </select>
    <!--根据appId查询未入账金额从订单-->
    <select id="selectUnrecordMoneyByAppId" parameterType="Long" resultType="Integer">
        select sum(actual_price) from order_details
        where is_deleted = 0 and (app_id = #{appId} or (fans_app_id=#{appId} and app_id = 888888)) and order_status <![CDATA[>=]]> 30 and order_status <![CDATA[<]]> 100
    </select>

    <!--查询提现申请-->
    <select id="selectWithdraws" parameterType="java.util.Map" resultType="com.quxin.freshfun.model.outparam.WithdrawOutParam">
        SELECT withdraw_base.id AS withDrawId,erp_app_info.app_name AS appName,withdraw_base.created AS applyDate,withdraw_base.updated AS dealDate,withdraw_base.withdraw_money AS withDrawMoney,
        withdraw_base.account_type AS accountType,withdraw_base.account_num AS accountNum,withdraw_base.state FROM withdraw_base LEFT OUTER JOIN erp_app_info ON withdraw_base.app_id = erp_app_info.app_id
        WHERE
        <if test="state!=null">
            withdraw_base.state=#{state} AND
        </if>
        withdraw_base.is_deleted = 0 LIMIT #{begin},#{pageSize}
    </select>

    <!--查询提现申请总数量-->
    <select id="selectWithdrawCount" parameterType="java.lang.Integer" resultType="java.lang.Integer">
        SELECT COUNT(id) FROM withdraw_base
        WHERE
        <if test="state!=null">
            state=#{state} AND
        </if>
        is_deleted = 0
    </select>

    <select id="selectWithdrawById" parameterType="java.lang.Long" resultType="com.quxin.freshfun.model.withdraw.WithdrawPOJO">
        SELECT app_id as appId,withdraw_money as withdrawMoney FROM withdraw_base
        WHERE id=#{id} AND is_deleted = 0
    </select>

    <!--处理提现申请-->
    <update id="dealWithdraw" parameterType="java.util.Map">
        UPDATE withdraw_base set state = #{state},handler_id = #{handlerId},updated = #{updated} WHERE id=#{withdrawId}
    </update>
</mapper>